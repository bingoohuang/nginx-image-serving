worker_processes  1;



events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    lua_package_path ';;$prefix/conf/?.lua;';

    keepalive_timeout  65;
    lua_shared_dict mysqldict_demo 128m;
    lua_shared_dict mysqlDict_lock 100k;

    server {
        listen       9001;
        server_name  localhost;
        default_type 'text/plain';

        # http://localhost:9001/kill?id=2
        location /mysqldict {
            content_by_lua_block {
                local val = require("poet.mysqldict").get{
                    key = ngx.var.arg_id,
                    dataSourceName = "root:my-secret-pw@192.168.99.100:13306/dba",
                    querySql = "select id, name, addr from cats", pkColumnName = "id",
                    luaSharedDictName = "mysqldict_demo",
                    dictLockName = "mysqlDict_lock"
                }
                if val then ngx.say(val.addr) else ngx.say("not found") end
            }
        }

        location /flushall {
            allow 127.0.0.1; # 只允许从本机调用
            content_by_lua_block {
                local val = require("poet.mysqldict").flushAll{
                    luaSharedDictName = "mysqldict_demo",
                    dictLockName = "mysqlDict_lock"
                }
                ngx.say(val)
            }
        }

        location /test {
           default_type 'text/html';
           echo "hello";
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
