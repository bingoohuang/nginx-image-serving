worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type text/html;

    sendfile        on;
    keepalive_timeout  65;
    charset utf-8;

    client_max_body_size 10m;
    lua_package_path ';;$prefix/conf/?.lua;';

    server {
        listen       8001;
        server_name  localhost;

        #lua_code_cache off;

        location = /upload {
            content_by_lua '
                local uploader = require "poet.uploader"

                local maxSize = ngx.var.arg_maxSize
                local suffix = ngx.var.arg_suffix
                local path = ngx.var.arg_path

                uploader.upload(maxSize, suffix, path)
            ';
        }

        location @image_server {
            content_by_lua '
                local imager = require "poet.imager"
                imager.magick_thumb("images/", "cache/", "securet",
                    ngx.var.sig, ngx.var.size, ngx.var.path, ngx.var.ext)
            ';
        }

        location ~ ^/images/(?<sig>[^/]+)/(?<size>[^/]+)/(?<path>.*\.(?<ext>[a-z_]*))$ {
            root cache;
            set_md5 $digest "$size/$path";
            try_files /$digest.$ext @image_server;
        }

        # This is a debug location that we can use to generate valid signed urls
        location ~ ^/gen/(.*)$ {
            set $path $1;
            content_by_lua '
                local imager = require "poet.imager"
                imager.generate_signature("securet", ngx.var.path)
            ';
        }

        location / {
            root html;
        }
    }

}
