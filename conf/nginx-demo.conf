# 捕获带{{和}}的URL，直接返回404
location ~ ^.*\{\{.*\}\}.*$ {
     #default_type text/plain;
     #add_header Content-Type text/plain;
     return 404;
}

location /redis {
    content_by_lua '
       local hi_redis = require("resty.hi-redis"):connect()
       local bingoo = hi_redis.redis:get("bingoo")
       --ngx.say(bingoo)
       --ngx.say(ngx.var.uri)
       local tcode = string.match(ngx.var.uri, "/tc/(%w+)")
       ngx.say(tcode)
    ';
}

location ~ ^.*/tcode/(.+)/.*$ {
   #echo $1;
   set $tcode $1;
   rewrite_by_lua '
       ngx.ctx.userid = "value"
   ';

   proxy_set_header tcode $tcode;
   proxy_pass http://localhost:9898;

   header_filter_by_lua '
       local cookies = ngx.header.set_cookie
       if not cookies then cookies = {} end
       if type(cookies) ~= "table" then cookies = {cookies} end
       local newcookies = {}
       table.insert(newcookies, "tcode=".. ngx.var.tcode .. ";path=/")
       table.insert(newcookies, "xx=" .. ngx.ctx.userid .. ";path=/")
       table.insert(newcookies, "var1name=" .. var1.name .. ";path=/")

       for i, val in ipairs(cookies) do
           --local newval = string.gsub(val, "([dD]omain)=[%w_-\\\\.]+",
           --          "%1=external.domain.com")
           table.insert(newcookies, val)
       end

       ngx.header.set_cookie = newcookies
   ';
}

location /cookie {
  echo $http_cookie;
}
