worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type text/html;

    sendfile        on;
    keepalive_timeout  65;
    charset utf-8;

    client_max_body_size 50m;
    lua_package_path ';;$prefix/conf/?.lua;';
    #error_log logs/error.log error;
    error_log logs/error.log info;


    server {
        listen       10011;
        server_name  localhost;
        default_type text/html;

        set $routetag "this";

        rewrite_by_lua '
            local easyhisticky = ngx.var.cookie_easyhisticky
            if not easyhisticky then
                easyhisticky = ngx.var.hostname
                ngx.header["Set-Cookie"] = "easyhisticky=" .. easyhisticky ..  "; path=/" .. "; domain=.p.c"
            end
            ngx.ctx.easyhisticky = easyhisticky
        ';

        location /cookie {
            content_by_lua 'ngx.say(ngx.ctx.easyhisticky)';
        }

        location /this {
            echo "this";
        }

        location /that {
            proxy_pass http://localhost:7872/that;
        }
    }

    server {
        listen       10012;
        server_name  localhost;
        default_type text/html;

        if ($request_method !~ ^(GET|POST)$ ) { return 403; }

        charset   UTF-8;
        access_log  logs/host.access.log  main;

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        access_by_lua '
            local easyhisticky = ngx.var.cookie_easyhisticky
            if not easyhisticky then
                easyhisticky = ngx.var.hostname
                ngx.header["Set-Cookie"] = "easyhisticky=" .. easyhisticky
                    ..  "; path=/"
                    -- .. "; domain=.raiyee.cn"
            end
            ngx.ctx.easyhisticky = easyhisticky
        ';

        location ~ /images/(.*)$ {
            access_log off; log_not_found off;

            set $imagename $1;
            content_by_lua '
                local path = ngx.ctx.easyhisticky == ngx.var.hostname
                    and "/routeimages" or  ("/stickyimages/" .. ngx.ctx.easyhisticky)
                path = path .. "/" .. ngx.var.imagename
                -- ngx.log(ngx.ERR, "rewrite path:", path)
                ngx.exec(path)
            ';
        }

        location /routeimages {
            access_log off; log_not_found off;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";

            if ($request_uri ~* \.png\.) {
                more_set_headers "Content-type: image/png";
            }
            if ($request_uri ~* \.(jpg|jpeg)\.) {
                more_set_headers "Content-type: image/jpeg";
            }
            if ($request_uri ~* \.gif\.) {
                more_set_headers "Content-type: image/gif";
            }
            alias /home/poet/app/openresty-run/nginx/images/;
        }

        location /stickyimages/ay140714142751579e91z {
            internal;
            proxy_set_header Host $host;
            proxy_pass http://115.29.151.202:10012/routeimages;
        }

        location /stickyimages/ay1407141427503248dfz {
            internal;
            proxy_set_header Host $host;
            proxy_pass http://115.28.240.164:10012/routeimages;
        }
    }
}
